{"version":3,"file":"static/js/815.3ff0506b.chunk.js","mappings":"0LACA,SCAA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA6F,4B,8BCG9E,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACE,kBAAMC,SAda,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cAEbC,EAAU,CACdC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,OAAQN,EAAKI,SAASE,OAAOD,OAG/BV,GAASY,EAAAA,EAAAA,IAAWL,IACpBF,EAAKQ,SAIyBC,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,kBACEC,KAAK,OACLR,KAAK,OACLS,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOL,UAAWC,EAAlB,oBAEE,kBACEC,KAAK,MACLR,KAAK,SACLS,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAASF,UAAWC,EAAjC,4BCzCN,MAAyB,uBAAzB,EAAwD,sBCA3CK,EAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,QAEtCC,EAAsB,SAACH,GAChC,IAAMI,EAJc,SAACJ,GAAD,OAAWA,EAAMC,SAASG,MAIhCC,CAASL,GAEjBM,EADSP,EAAUC,GACOO,cAEhC,OAAOH,EAAMF,QAAO,qBAAEf,KAAeoB,cAAcC,SAASF,O,UCgBhE,EAlBe,WACX,IAAMJ,GAASO,EAAAA,EAAAA,IAAYV,GACrBpB,GAAWC,EAAAA,EAAAA,MAGjB,OACI,mBAAOa,UAAWC,EAAlB,mCAEI,kBAAOD,UAAWC,EACdC,KAAK,OACLR,KAAK,SACLE,MAAOa,EACPQ,SARW,SAAA5B,GAAK,OAAIH,GAASgC,EAAAA,EAAAA,GAAa7B,EAAM8B,OAAOvB,eCTvE,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA2F,4B,UCiC3F,EA5BoB,WAChB,IAAMe,GAAQK,EAAAA,EAAAA,IAAYN,GACpBxB,GAAWC,EAAAA,EAAAA,OAEjBiC,EAAAA,EAAAA,YAAU,WACNlC,GAASmC,EAAAA,EAAAA,SACV,CAACnC,IAIJ,OACI,8BACKyB,EAAMW,OAAS,IACd,eAAItB,UAAWC,EAAf,SACOU,EAAMY,KAAI,YAA2B,IAAxB7B,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,OAAQ2B,EAAS,EAATA,GACxB,OACI,gBAAaxB,UAAWC,EAAxB,UACKP,EADL,KACaG,GACT,mBAAQK,KAAK,SAASF,UAAWC,EAAUuB,GAAIA,EAAIC,QAAS,kBAVhE,SAAAD,GAAE,OAAItC,GAASwC,EAAAA,EAAAA,IAAcF,IAUyCG,CAAgBH,IAAlF,sBAFKA,WCjBtB,SAASI,IACtB,OACE,iBAAK5B,UAAWC,EAAAA,UAAhB,WACE,uCACA,SAAChB,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["views/ContactsView/ContactsView.module.css","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","redux/contacts/contacts-selectors.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import s from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const onAddContact = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    const contact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={onAddContact} className={s.form}>\n      <label className={s.input}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.input}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\"};","export const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getFilteredContacts = (state) => {\n    const items = getItems(state);\n    const filter = getFilter(state);\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\n  };","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\nimport { updateFilter } from 'redux/contacts/contacts-actions'\n\n\nconst Filter = () => {\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n\n    const onUpdateFilter = event => dispatch(updateFilter(event.target.value));\n    return (\n        <label className={s.filter}>\n            Find contacts by name\n            <input className={s.input}\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={onUpdateFilter}\n            />\n        </label>\n    )\n}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { deleteContact, getContacts } from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n    const items = useSelector(getFilteredContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch]);\n\n    const onDeleteContact = id => dispatch(deleteContact(id));\n\n    return (\n        <>\n            {items.length > 0 && (\n              <ul className={s.list}>\n                    {items.map(({ name, number, id }) => {\n                        return (\n                            <li key={id} className={s.item}>\n                                {name}: {number}\n                                <button type='button' className={s.button} id={id} onClick={() => onDeleteContact(id)}>Delete</button>\n                            </li>\n                        )\n                    })}\n                </ul>\n                )}\n            </>\n        )\n    };\n\nexport default ContactList;","import s from './ContactsView.module.css';\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\n\nexport default function ContactsView() {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};"],"names":["ContactForm","dispatch","useDispatch","onSubmit","event","preventDefault","form","currentTarget","contact","name","elements","value","number","addContact","reset","className","s","type","pattern","title","required","getFilter","state","contacts","filter","getFilteredContacts","items","getItems","normalizedFilter","toLowerCase","includes","useSelector","onChange","updateFilter","target","useEffect","getContacts","length","map","id","onClick","deleteContact","onDeleteContact","ContactsView"],"sourceRoot":""}